\newpage

\begin{CJK*}{GBK}{song}

\setcounter{chapter}{5}
\setcounter{section}{0}

\chapter*{竞价广告}

\thispagestyle{empty}
\markboth{竞价广告}{竞价广告}

随着受众定向技术的发展，以及搜索服务变现的要求，产生了竞价这种新的在线广告交易模式。这种交易模式的本质，是将量的约束从交易过程中去除，仅仅采用"变现高者得"的决策方案来投放广告。竞价顺应了定向广告向精细化发展的趋势要求，为大量无法用合约形式售卖的流量找到了可能的变现渠道，也使得大量中小广告主的参与在线广告的可能性和积极性大大增强。

在竞价的市场环境中，产生了广告网络这种批量采购各种媒体剩余流量，然后主要按照点击付费的方式售卖给需求方的产品形式。这中产品形态对于提高整个在线广告市场的流动性发挥了很大作用。如何设计合理的市场规则和定价策略，使得整个市场的竞争更加充分，对于广告网络运营者的收益有相当大的影响。这方面有关宏观市场上的讨论，在竞价时代显得非常重要，也成为在线广告领域得到充分重视和深入研究的问题，我们也会对这方面的理论做适当的回顾。

竞价式的广告网络中，计算技术的发展朝着更深入、更加数据驱动的方向发展。具体而言，有两项技术非常关键：一是当大量中小广告主参与市场后，如何根据广告的一些业务要求设计更高效合理的索引和检索技术；二是为了完成eCPM估计，对给定$(a,u,c)$组合上的点击率预测技术。这两部分将是本章展开讨论的重点。

对应于广告网络的产生，需求方的产品和技术也在发生变化。关键的变化有两点：一是由面向广告位采买变成面向人群的跨网络采买；二是帮助广告主在竞价环境中完成量的要求，这一点是竞价市场不再直接保证的。能达到这些需求方目的的产品，我们叫做交易终端。在交易终端里，在量的约束下完成ROI的优化的问题依然存在，并且变得比在线分配问题更加困难，这也成为高端的采买平台提供的服务之一。

搜索广告的商业形态，与显示广告网络本质上是一样的。不过由于搜索问题的特殊性，以及搜索广告重要的商业地位，对它的技术探索有很多定制化的部分，我们将在一下章专门介绍搜索广告有关的问题。

\section{位置拍卖市场}

让我们先来看看怎么具体描述竞价广告问题，并从宏观市场的角度了解一些非常重要的结论。假设有一组广告位可以被占用，将这些广告位按照其经验价值排名，分别记为$s={1, 2, \cdots, S}$，对Banner广告而言，这里的$S$一般为1。在某次广告请求中，有一组广告$a={1, 2, \cdots, A}$出价参与拍卖，每个广告的出价记为$b_a$，系统将前$S$ 个高出家的广告依次放到前面排序好的$S$个广告位上，这样的问题称为\begin{CJK*}{GBK}{kai}{位置拍卖(Position Auction)}\end{CJK*}。根据前文的讨论，当某个广告$a$ 被放在$s$ 位置上时，其期望收益即即eCPM为$r_{as}=\mu_s \nu_a$。这里我们做了一些假设，比如点击率$\mu$仅与位置$s$有关，而点击价值$\nu$仅与广告$a$ 有关，这些假设在搜索广告给定某具体关键词的情形下，可以说基本合理，对于显示广告的情形虽然非常粗略，但并不太影响对竞价问题宏观市场的讨论。

围绕位置拍卖最重要的研究，是广告的\begin{CJK*}{GBK}{kai}{定价(Pricing)}\end{CJK*}问题。定价问题探讨的是在一次具体的拍卖交易中，给定各参与者的出价，以及他们的期望收益，如何对最后获得某个位置的广告商收取合适的费用的问题。这个问题乍听起来有点掉书袋，按照广告主自己的出价收取不就可以了么？为了说清楚此项研究的动机，我们先来看看下面的例子：假设有某个单位置($S=1$)的广告机会在竞拍，开始有两个广告主参与，甲出价1元，乙出价2元，当然甲赢得了此次竞价，如果按照其出价来收费，市场就向他收取2元的费用。在广告市场里，这一拍卖机会还会重复出现(对应于不断产生的展示)，因此广告主可以也存在调整出价的机会，假设乙在发现自己2 元钱能拿到流量以后，自然就会想到，是不是可以调低出价，用更低的成本拿到流量？乙将一直不断尝试，知道把出价调低到1.01元，发现继续调低就拿不到位置了。于是系统稳定在甲出价1元，乙出价1.01元。此时假设又有一个广告主丙加入竞争，并希望赢下此广告位，那么以此类推，他在不断调整后将会出价1.02元，市场的收入也就是1.02 元。我们有可能通过调整定价策略来影像系统的总收益么？这样的机会显然存在。比如我们在甲出2元，乙出1元参与竞价时，并不对获胜的甲收2元，而是收取其下一名即乙的出价1元，那么甲就没有动力调低其出价了。那么当丙加入时，就需要出价2元以上才可以赢得竞价，市场的收入也就变成了2元(不论丙出价多少，我们都按其下一位即甲的出价来收费)。这个简单的例子告诉我们，在广告这样的参与者可以针对同一个标的物不断调整出价的拍卖环境中，通过聪明的定价策略，完全可能为整个市场创造更高的收益以及其他好处。

在定价问题上，我们在微观上的直觉未必可以推广到宏观市场。让我们来看看如何对上面的位置拍卖问题作进一步探讨。

\section{广告网络}

对显示广告而言，合约式的售卖方式必然无法消耗所有的库存，实际中由于为了控制售卖比例已获得更高的品牌溢价空间，这样卖不出去的广告流量可能比我们想象得更多，这部分流量，我们称为\begin{CJK*}{GBK}{kai}{剩余流量(Remnant Inventory)}\end{CJK*}。竞价交易模式的产生，为这部分流量提供了变现的机会，于是产生了广告网络这一产品形态。

广告网络的基本业务，是批量聚合各媒体的剩余流量，按照人群或上下文标签的流量切割方式售卖给广告主。由于是按人群售卖，广告网络会极力淡化广告位的概念。另外，广告网络一般不会向广告主约定或保证能够买到的量，而只是根据变现能力来决定每次展示分配给哪个广告主。与合约式的广告系统不同，广告网络使得为了保证合约而设计的复杂的在线分配算法必要性大大降低(如前文所述，在优化的意义上，在线分配技术对于广告网络依然很有价值，但已不再是必需的技术)，使得其中的计算技术可以把精力集中在对eCPM 的估计上。从商业角度来看，广告网络的销售模式与合约的方式相比，也有两点优势：首先是无需再满足广告主品牌独占的要求，这使得让国美和苏宁同时参与同一个人群的竞价，提高市场流动性成为可能，而在合约广告中，这一点是很难做到的。其次，由于广告网络不再保证量，二是根据实际消耗来结算，一般来说财务上采用广告主先充值的方式，这区别于合约广告投放结束后计算的方式，结果使得广告网络运营方的现金流状况大为改善。

广告网络的存在CPM、CPC和CPS等不同的结算方式，不过最主流的方式是CPC。从计算的角度，我们非常有必要分析一下为什么CPC是最合适的。首先从Demand来看，既然是各种媒体的不同广告位聚合在一起售卖，广告主无法知道每个媒体上广告的具体位置。而根据我们前面的讨论，位置对于广告的曝光效果影响巨大，因此实际上广告主根本无法评估每次展示的出价，而在点击上出价，这个问题就没那么严重了。另外从Supply来看，由于淡化广告位的概念，并且聚合了多个媒体的流量，广告网络可以接触到同一个用户比较丰富的网络行为，并且知道每次展示所在的媒体与广告位位置，所以比广告主更容易估计点击率。根据第一章中的讨论，由广告网络负责估计点击率，需求方根据对点击价值的估计来出价，是最合理的市场分工。

\subsection{广告网络架构}

广告网络的典型系统架构如下图所示。

\begin{figure}
\centering
\scalebox{0.6}
{
    \includegraphics[width=1.6\textwidth]{AdNet.eps}
}
\caption{广告网络(Ad Network)系统架构示意}
\end{figure}

\subsection{广告网络案例}

\section{广告检索}

竞价广告市场中，大量中小广告主的参与，以及复杂的定向条件，对检索技术提出了更高的要求。倒排索引是搜索引擎的关键技术，而广告的检索上也采用这样的框架。但是广告的检索问题也有一些自身的特点和需求，我们需要讨论一下这些需求下一些专用的检索技术。在合约式广告系统中，广告主数目一般来说不算太大，因而采用一般的检索方案完全可以满足要求；然而在服务大量中小广告主的广告网络中，探讨高效且精准的检索技术，有非常切实的产品意义。

广告的检索，有两点与普通的搜索引擎有区别：一是广告指定的定向条件组合，可以看成是一个由与或关系连接的布尔表达式，这样的布尔表达式的检索，很显然与搜索引擎对文本的“bag of words”假设不太一样；二是在上下文和用户兴趣信号比较丰富时，广告检索中的query可能相当长，甚至会由上百个term组成，这种情况下的检索，也与搜索引擎之中主要由1-4个term组成的query情形有区别：试想你把100个关键词同时输入到搜索框中，返回的结果会是你想要的么？

在讨论这些广告独特的检索技术之前，我们先来回顾一下倒排索引的基本知识。倒排索引是现代搜索引擎的核心技术之一，其核心目的，是将从大量文档中查找包含某个词的文档集合这一任务用$O(1)$的时间复杂度完成。此处的$O(1)$是相对文档的数目而言，也就是说倒排索引可以实现与文档集大小无关的检索复杂度，这一点对于搜索来说是至关重要的。倒排索引的基本概念可以用下面的例子解释。假设我们有如下的几篇文档：

$D_0 = ``"$
$D_1 = ``"$
$D_2 = ``"$

\subsection{布尔表达式的检索}

广告检索与普通搜索引擎检索第一个不同，是布尔表达式的检索问题。在受众定向的售卖方式下，一条广告对象不能再被看成是a bag of words，他们应该是一些定向条件组合成的布尔表达式，如下面给出的一些例子：

$a_1 = (\textrm{age} \in \{3\} \cap \textrm{geo} \in \{$北京$\}) \cup (\textrm{geo} \in \{$广东$\} \cap \textrm{gender} \in \{$男$\})$

$a_2 = (\textrm{age} \in \{3\} \cap \textrm{gender} \in \{$女$\}) \cup (\textrm{geo} \notin \{$北京,广东$\})$

$a_3 = (\textrm{age} \in \{3\} \cap \textrm{gender} \in \{$男$\} \cap \textrm{geo} \notin \{$广东$\}) \cup (\textrm{state} \in \{$广东$\} \cap \textrm{gender} \in \{$女$\})$

$a_4 = (\textrm{age} \in \{3,4\}) \cup (\textrm{geo} \in \{$广东$\} \cap \textrm{gender} \in \{$男$\})$

$a_5 = (\textrm{state} \notin \{$北京,广东$\}) \cup (\textrm{age} \in \{3,4\})$

$a_6 = (\textrm{state} \notin \{$北京,广东$\}) \cup (\textrm{age} \in \{3\} \cap \textrm{state} \in \{$北京$\}) \cup (\textrm{state} \in \{$广东$\} \cap \textrm{gender} \in \{$男$\})$

$a_7 = (\textrm{age} \in \{3\} \cap \textrm{state} \in \{$北京$\}) \cup (\textrm{state} \in \{$广东$\} \cap \textrm{gender} \in \{$女$\})$

在这些例子中，我们用布尔表达式来表示广告的定向人群，并且写成析取范式(Disjunctive Normal Form, DNF)的形式。在这样的表达形式中，有两个概念要先做一下解释：一是每个DNF都可以分解成一个或多个conjunction的并，如$a_1$可以分解成$j_1 = (\textrm{age} \in \{3\} \cap \textrm{geo} \in \{$北京$\})$和$k_2 = (\textrm{geo} \in \{$广东$\} \cap \textrm{gender} \in \{$男$\})$这两个conjunction；二是每个conjunction又可以进一步分解为一个或多个assignment的交，以$c_1$为例，可以分解为$\textrm{age} \in \{3\}$和$\textrm{geo} \in \{$北京$\}$这样两个assignment。

这个问题有如下的两个特点，是我们设计相应检索方法的重要依据：首先，当某次广告请求的定向标签满足某个conjunction时，一定满足包含该conjunction的所有广告，这说明我们只要对conjunction建立倒排索引，并加上一层conjunction $\rightarrow$ ad的辅助索引即可。其次，在conjunction的倒排索引中，有一项显而易见的直觉可以帮助我们减少计算。这一直觉即是：因此，令sizeof(query)表示广告请求中的定向标签个数，而sizeof(conjunction)表示某conjunction中的含有``$\in$"的assignment数目，当sizeof(query) $<$ sizeof(conjunction)时，该conjunction一定不满足该次请求。

根据上述两个重要特点，我们可以设计出一个为布尔表达式检索定制的算法。该算法维护一个两层的倒排索引，即上面所说的conjunction和ad两层索引，后一个索引按照或的关系进行检索，而前一个索引有不太一样的结构，我们重点来看一下。在conjunction的索引中，我们把每个conjuction 分解成一组(key, value) 对，例如将$\textrm{age} \in \{3, 4\}$分解成$\textrm{age} \in \{3\}$和$\textrm{age} \in \{4\}$两个term，这些term即是倒排索引的key，而``$\in$"和``$\notin$"操作符则放在倒排链表的具体元素上。利用到上文所说的assignment个数的约束，我们可以做的优化是将这一倒排索引按照sizeof(conjunction)分成若干部分，以提高检索效率。我们仍然以上文的一组广告为例来解释一下。这组广告的DNF可以按如下的方式分解成一些conjuctions：

$a_1 = j_1 \cup j_4, a_2 = j_2 \cup j_6, a_3 = j_3 \cup j_7, a_4 = j_5 \cup j_4, $

$a_5 = j_6 \cup j_5, a_6 = j_6 \cup j_1 \cup j_7,  a_7 = j_1 \cup j_7$

其对应的倒排索引，也可以很容易地写成下面的形式：

$j_1 \rightarrow \{a_1, a_6, a_7\}, j_2 \rightarrow \{a_2\}, j_3 \rightarrow \{a_3\}, j_4 \rightarrow \{a_1, a_4, a_7\},$

$j_5 \rightarrow \{a_4, a_5\}, j_6 \rightarrow \{a_2, a_5, a_7\}, j_7 \rightarrow \{a_3, a_6\}$

而conjunction的倒排索引，注意到所有conjunction中最大的size为2，我们可以将倒排索引分成三部分，每部分中所有的conjunction其size都一样，按照这样的准则，最终形成的conjunction倒排索引应为下面的形式：

\textrm{size} = 0: (geo, 北京) $\rightarrow \{(j_6, \notin)\}$, (geo, 广东) $\rightarrow \{(j_6, \notin)\}$, $Z \rightarrow \{(j_6, \in)\}$

\textrm{size} = 1: (age, 3) $\rightarrow \{(j_5, \in)\}$, (age, 4) $\rightarrow \{(j_5, \in)\}$

\textrm{size} = 2: (age, 3) $\rightarrow \{(j_1, \in), (j_2, \in), (j_3, \in)\}$, (geo, 北京) $\rightarrow \{(j_1, \in)\}$, (gender, 女) $\rightarrow \{(j_2, \in), (j_7, \in)\}$, (gender, 男) $\rightarrow \{(j_3, \in), (j_4, \in)\}$, (geo, 广东) $\rightarrow \{(j_3, \notin), (j_4, \in), (j_7, \in)\}$

其中size为零的部分，包含哪些所有只有``$\notin$"操作符的conjunctions。为了保证给定一个assignment，size为零的conjunctions至少出现在一个倒排表中，算法引入$Z$为一个特殊的term，并且将所有size为零的conjunctions都放在其倒排表中，并赋以一个``$\in$"操作符。

这样的布尔表达式索引建立的过程，我们用代码概念性地描述如下：

在这样的索引中检索某个assignment满足的候选的概念性代码如下所示：

\subsection{长查询的相关性检索}

媒体广告与搜索的检索技术，还有一点不太一样的地方，即在处理很多个term组成的query时的处理办法。我们考虑上下文定向的情形，当通过网页内容的关键词来匹配广告候选时，往往需要用十多个甚至几十个关键词去查询广告，再进行后续精细的排序。在这一情形下，如果仍然采用一般搜索引擎对query的处理办法，则会陷入两难的境地：如果假设各个term之间是与的关系，基本上不可能得到任何匹配的结果；如果假设各个term之间是或的关系，那么在检索阶段就会返回大量相关性很差的候选，为后续排序制造极大的麻烦。

解决这一问题的基本思路，是在检索阶段就引入某种评价函数，并按这一函数的评价结果来决定返回哪些候选。这一评价函数的设计有两个要求：一是合理性，即对最终排序的评价函数有直觉上合理的近似；二是高效性，即需要存在与倒排索引数据结构相契合的快速评价算法，否则就与在排序阶段展开计算没有差别了。简单来说，前人的研究发现，当我们选用一个线性函数(变量为各term)，且各变量的权重为正式，是可以构造出这样的快速评价检索算法的。我们将这样的线性函数定义为：

\begin{equation}
\textrm{score}(a, c) = \sum_{f \in \Omega(a) \cap \Omega(c)} \alpha_f v_f(a)
\end{equation}
其中$\Omega(a)$和$\Omega(c)$分别表示$a$和$c$上不为零的特征集合，而$v_f(a)$表示$f$这一特征在$a$广告上的贡献值。如果我们使用常用的向量空间模型(Vector Space Model, VSM)作为评价函数，那么其中的$\alpha_f$即为关键词$f$在上下文中的TFTDF，而$v_f(a)$即为$f$在某广告$a$中的TFIDF。虽然$\alpha_f$在不同的查询中取值不同，但在一次查询中是一组常数。如果我们采用后文中提到的基于广义线性模型的CTR预侧模型，也同样可以套用此框架。

将线性评价函数计算过程加快的关键，在于使用两个上界：一是某个关键词$f$在所有文档上贡献值的上界，我们记为$ub_f$；二是

\section{流量预测}

从第二章中的在线分配算法开始，就对流量预测功能有明确的需求。在广告网络中，一般来说也需要对广告主的定向条件和出价估计能够得到的流量，以辅助广告主进行决策。由于需要一些广告检索的技术基础，因此我们在这里才讨论这一问题。

流量预测的问题可以这样描述，给定某广告的定向条件，以及出价(对于合约式广告来说不需要)，估算能够得到的流量。这一问题比较有趣的思路，是将其也视为一个检索问题，只不过索引的对象由$a$变成了$u$或$c$，而查询由$(u,c)$上的标签变成了广告要求的标签。对比于上一节中提到的广告检索，这个问题要稍微简单一些，因为$u$ 或$c$都不存在DNF的布尔表达式描述，而是简单的特征集合而已。有一点需要说明，在实际的定向广告中，广告主可能对$u$和$c$上的标签设置联合条件，这实际上要求在流量预测中对$(u,c)$对做索引，而不是对$u$和$c$分别建立索引，不过这样有可能使得索引的量大大增加，当这样做不实际时，可能还是需要对$u$和$c$分别建立索引。我们需要根据实际情况，来决定采用哪种方案，不过这两种方案的原理是没有区别的。为了简洁起见，在下面的部分中我们只对$c$建立索引这个问题做探讨。

对$c$来预测给定出价下上下文定向的流量，大致分为三个步骤：一、建立索引：将$c$上的标签作为文档的terms，建立倒排索引。这里的倒排索引与一般搜索引擎相同，但在每条$c$的正排索引部分，需要保存一项信息，即该页面$c$对应的赢得竞价的eCPM分布直方图。二、查询结果：对一条输入的广告，按照其DNF描述的标签之间的与或关系猴构造查询，得到所有符合条件的$c$的集合。三、估算流量：对每个候选$c$，首先计算其与该广告$a$的eCPM即$r(a, c) = \mu(a, c) b_a$(具体计算方法见下一节)，然后根据$c$的eCPM分布直方图计算$a$能赢得的流量，这样遍历所有候选，就可以估算出$a$在出价$b_a$情形下的流量。我们用下面的代码描述流量预测的检索过程。

这样的方案预期是说流量预测，不如说是流量回顾，不过如果索引中的$(u,c)$能够覆盖若干周的周期，其结果还是基本可靠的。上面只介绍了广告DNF定向条件限制下的流量预测方案，

\section{点击率预测}

广告网络里另一项非常重要的技术是点击率的预测。前文多次提过，估计点击率的目的是与点击价值(对广告网络而言即是CPC计费时的bid)相乘得到eCPM，再根据eCPM对广告进行排序。从这里可以看出，广告的点击率估计与搜索里的排序问题有关联，但又有明显的不同：点击率估计不能像像搜索排序那样只要求结果排序的正确性。这一是因为点击率需要乘以bid才得到最后的排序，二是因为对一些需求方技术平台而言，需要尽可能准确地eCPM用于出价。因此，作为各种广告系统中通用的一项技术，点击率预测更适合被建模成回归(Regression)问题而不是排序问题。

点击率预测问题的挑战主要在于如何使模型能捕捉高度动态的市场信号，以达到更准确的预测。这一挑战可以用在线的模型学习算法，或者用快速更新的动态特征来解决，从方法论上说，这两种思路是对偶的，我们会作对比介绍，但重点放在第二种思路，因为其工程扩展性更强。从计算角度来说，另一个挑战是如何在海量的日志数据上快速有效地完成训练迭代，这也将是我们讨论的重点。

\subsection{点击率预测模型}

把点击事件($h$)看成一个二元取值的随机变量，那么其取值为真($click = 1$)的概率就是点击率。因此，点击事件的分布可以写成以点击率$\mu$为参数的二项(Binomial) 分布：
\begin{equation}\label{ctr}
p(h) = \mu^h (1-\mu)^{1-h}
\end{equation}
现在我们还用不到这个式子，不过请大家记住这种表达，后文讨论到点击率的平滑时还会用到。

点击率预测的目的，是在$(a,u,c)$组合与点击的概率之间建立函数关系，因此可以概念性地表示成下面的概率估计问题：
\begin{equation}
\mu(a,u,c) = p(h=1|a, u,c)
\end{equation}
由于$h$是个取值于$\{0, 1\}$的二元变量，我们很自然想到的基础方法是逻辑回归(Logistic Regression, LR)，即：
\begin{equation}
p(h=1|a, u,c)=\sigma(w^\top f(a, u, c))
\end{equation}
 其中$f$表示$(a,u,c)$组合上的特征矢量，即前文所谈的受众定向的输出及其派生的其他特征；$w$为各特征的的加权系数，也就是此模型需要优化的参数；$w^\top f$ 这一线性模型的输出经过Logistic sigmoid函数映射到$(0, 1)$之间，此映射函数形式为：
\begin{equation}
\sigma(z) = \frac{1}{1 + e^{-z}}
\end{equation}

从方法上看，LR是利用线性函数来解决非线性目标。实际上，这一模型属于广义线性模型(Generalized Linear Model, GLM)一族，为GLM在Binomial error情形下的特例。希望大家细心体会这样的建模思路：线性模型研究充分并且结果可解释性强，是我们在碰到回归问题时首先要考虑的方法。不过实际情况中，回归目标的种类也许使得直接应用线性模型并不可行，那么可以利用广义线性模型来连接线性函数输出与这种特殊的目标变量。当这一目标是Binomial变量时，将线性函数输出用Logistic sigmoid函数扭曲到$(0, 1)$即可。当目标是$R^+$上的变量，或者Multinomial变量时，又该如何处理呢？大家可以从GLM的理论中得到答案，不过这离本书太远，就不做赘述了。

对LR模型的另一种解读，是把它看做最大熵模型在二分类问题下的特例。因此，我们在文献中看到用最大熵模型来预测点击率，与LR模型指的是同一类方法。这种等价关系数学上的变换并不复杂，我们不在这里讨论。

LR模型在广告实践中的关键是优化算法，我们需要一个能够方便地在分布式计算框架下实现，在海量用户日志上完成训练的方法。由于LR模型不存在闭式解，其优化方法必然需要迭代进行。在典型的map/reduce分布式计算框架下，由于磁盘被用作迭代之间的数据交换手段，迭代的次数直接决定着训练算法的效率。因此，在每个迭代中尽可能完成更复杂深入的运算，减少迭代次数，是此处的关键。这样的思路适用于LR模型训练，也适用于许多map/reduce下的需要迭代求解的机器学习算法。

\subsubsection{L-BFGS}

先来看看LR模型的基本优化方法，Limited-memory BFGS(L-BFGS)方法。由于LR模型可以视为最大熵模型的特例，最大熵模型的典型优化方法，比如IIS(Improved Iterative Scaling)也曾经被用于LR的更新。这种方法虽然物理意义明确，计算简单，缺有着收敛速度慢的致命弱点。在目标函数可导的一般优化问题中，拟牛顿法是一族最常用的方法，其思路是用一个估计出来的Hession矩阵近似实际的Hession矩阵，再根据此Hession矩阵和梯度信息以二阶的方式更新问题的解。拟牛顿的在许多工程问题中是导数方法中近乎必然的选择，主要有以下两个原因：一、只使用一阶导数的方法，在各种特征没有很好归一化的情形下，很容易发生Zig-zag的问题，而大量特征平用的模型中，由于无法详细讨论每个特征的意义，归一化不充分几乎是一定的，因此基于二阶导的牛顿方法会有好得多的收敛性；二、如果使用普通牛顿法，当Hession阵不正定时，二阶的更新方法将会彻底失效。因此，用一个近似但保证正定的Hession阵代替实际的Hession阵，可以保证解的过程稳定收敛。

拟牛顿的关键有两点，一是近似的Hession计算方法。直观

\subsubsection{ADMM}

是否存在一种普适性的思路，使得我们可以对一般的迭代求解问题减少其迭代次数呢？在互联网大规模数据处理的挑战诞生以后，学术界对这个问题也进行了深入的研究，产生了一些颇具启发意义得方法。这里我们介绍一种称为Alternative Directional Method of Multipliers (ADMM)的一般性方法。

\subsection{静态与动态特征}

上一节主要讨论的是点击率预测模型侧的问题，这一节我们来看看特征侧的技术。从受众定向得到的所有$f(a, u, c)$，以及这些特征的运算，可以组合出大量的特征供模型选择，这是大多数机器学习问题共同的方法。这样的特征生成方法，是点击率预测特征的基础方法，不过在广告这样的问题里也遇到一些挑战：一是组合特征数量可能巨大，使得模型的参数数目也非常大，工程上参数更新和在线计算都需要比较高效的设计；二是模型动态性的本质要求参数快速更新，而在多台ad server之间协同进行online learning并非一件易事。

在机器学习问题中，有一项很重要的方法论，即某项模型侧的技术，一般都可以找到特征侧的对偶方案。那么如何设计特征方案使得模型快速演进的需求变得不那么迫切呢？当然就是让特征变成快速演进的！我们考虑上面所介绍的特征，假设某个组合用户性别标签为男性，上下文为体育页面，广告候选为运动服装，那么{运动服装，男性，体育}这样的一个标签组合会被激活，在模型训练中，这个特征的值就被设置为1，这个1永远都是确定的，我们把这样的特征叫做静态特征。如何才能让这个特征“动”起来呢？办法也很简单：当这样一个组合被激活时，我们不再用1作为其参与训练的值，而是采用这个组合历史上一段时期的点击率。这样一来，即使是同一个$f(a, u, c)$，在不同的时间点，其所对应的特征取值也是不同的，这样的特征就是动态特征。

采用历史点击率作为动态特征，可以这样来理解：我们最终预测的是某个特定$(a, u, c)$上的点击率，而其某个特征组合$f(a, u, c)$上的点击率，可以认为是关于最终目标的一个弱决策器。通过对这些对应特征组合的弱决策器的融合，我们可以更容易地预测该$(a, u, c)$上的点击率。这样的弱决策器方案有个最大的好处，那就是这些弱决策其本身只需要简单的数据统计就可以得到，而不需要复杂的训练过程。因此，通过这些简单的弱决策器来捕捉模型的动态部分，这样整体的融合模型就可以不必那么快速地更新了。使用动态特征的另一个好处，是模型的参数数目可以大大减少：对于(地域=北京, 广告类型=电商)和(地域=上海, 广告类型=日化)这两个维度组合的具体实例而言，如果采用静态特征方案，需要对这两个实例分配不同的特征编号；而采用动态特征方案时，可以在模型中共享同一个特征参数，而通过不同实例的不同特征取值来分辨它们。这样一来，整体模型的参数个数，就由各种维度组合总的实例数目降低到了维度组合的种类数目，其离线估计和在线计算都会大为简化。

\subsection{位置偏差与CoEC}

使用点击率作为动态特征概念上没问题，但在实际操作中会遇到很大困难，特别是当广告主数量不充分的时候。我们假设某广告网络有两个广告位，一个是某网站首页首屏，一个是某小说网站内容页最下端，如果用点击率作为直接的反馈，很显然前几天投在更多地第一个广告位的广告会表现出更好的效果，而这主要是由于位置带来的偏差。请大家再次回顾一下我们在第一章中讲到的广告有效性模型--位置是曝光有效程度的关键因素。

除了广告位位置，还会有其他一些非定向因素对点击率有比较大的影响，主要的有：广告位尺寸、广告位类型(比如门户首页、频道首页、内容页、客户端)、创意类型(比如图片、flash、富媒体)、操作系统、浏览器(特别是adblocker的因素)、日期和时间等。所有这些因素，都与广告决策没有关系，但是对点击率的影响要远远超过其他定向技术。因此，在这些因素上占据优势的广告，其点击率会被严重高估，如果直接用点击率作反馈，也会造成强者愈强的马太效应。

如何去除位置等因素的影响呢？如果我们有财力和人力，可以采用眼球跟踪(Eye Tracking)的设备来评估用户对页面上广告位的关注程度，在后续的统计中据此做归一化。对于一些极关键的页面，比如搜索广告结果页，这样做是值得和可行的。但对于大量显示广告的广告位来说，这样做显然不切实际。工程上一种合理的办法，是将某广告位相当长一段时期内的平均点击数作为其关注程度的近似评估，我们把这一指标叫做\begin{CJK*}{GBK}{kai}{期望点击(expected click)}\end{CJK*}。请大家一定注意，与字面直觉不同，期望点击是对展示有效性的一个评估指标。

期望点击要求评估的是在广告质量完全随机的情况下，广告位或其他属性对应的平均点击率。要严格达到这一目的，需要采用随机出广告的策略做小部分流量的测试。这样的方法同样只能用于搜索广告等因素简单且非常重要的页面。在考虑多个因素共同作用，或广告环境比较复杂的情况下，我们可以采用从数据中近似地学习出期望点击的方法。该方法概念上很简单，我们只用哪些偏差因素作为特征，训练一个点击率模型，这个模型我们称为偏差模型(bias model)。所谓偏差因素，即那些与广告决策无关的特征，这些特征一般来说与$a$无关，我们把偏差模型概念性地表示为$\mu_{\textrm{bias}}(u,c) = p_{\textrm{bias}}(h=1|u,c)$。偏差模型的形式和训练方法都可以与前面所谈的整体点击率模型一致，因此不再赘言。需要注意的是，偏差模型需要用比整体点击率模型更长时间的数据来训练，这样做的目的是希望消除某段时期广告质量带来的影响。

得到了偏差模型以后，我们可以定义下面的归一化的点击率指标：
\begin{equation}
\textrm{CoEC} = \frac{\sum_i h_i}{\sum_i \mu_{\textrm{bias}}(u,c)}
\end{equation}
直观上看，这一指标是点击与期望点击的比值，因此我们称之为Click over Expected Click(CoEC)。由于在分母上考虑了位置以及其他因素的偏差对点击率的影响，这一指标可以更准确地表征某部分流量上广告投放的实际点击率水平，也比较适用于点击反馈这样的动态特征。

采用动态特征和偏差模型的工程方案，点击率预测模型训练的流程分三步完成：首先，用较长一段时间的训练数据，只提取偏差特征并训练偏差模型；然后，利用得到的偏差模型，计算所需要维度组合上的COEC作为动态特征；最后，用所有动态特征和非偏差特征的动态特征训练整体点击率模型，其中用偏差模型的输出作为点击率的先验。我们可以用下图示例性地描述这一过程。

\subsection{点击反馈的平滑}

用点击率或CoEC这样的点击反馈作为动态特征，还需要解决一个问题，就是在统计不足的维度组合上如何稳健地统计这些动态特征――大量的长尾维度组合对于更准确地预测点击率是有很大帮助的。

以CTR为例，公式\ref{ctr}给出了点击的生成模型，点击率就是这一模型的参数。在知道每次展示点击与否的情况下，可以很容易得出，参数$\mu$的最大似然估计为：
\begin{equation}
\hat \mu = \frac{\sum_i h_i}{N}
\end{equation}
其中N为总的展示数。当估计某些数据不足的维度组合上的点击率时，一般的思路是在分子分母上各加一个常量，以起到平滑的作用：
\begin{equation}\label{smooth}
\hat \mu' = \frac{\alpha + \sum_i h_i}{\gamma + N}
\end{equation}
很显然，$\alpha / \gamma$应该等于某更大流量范围内的平均点击率。可是$\alpha$和$\gamma$的绝对数值就没有太直观的方法可以设置。我们仍然采用经验贝叶斯的方法来解决这个问题。

在贝叶斯的框架下，我们可以把$\mu$看成随机变量，由于公式\ref{ctr}是一个二项分布，其参数$\mu$对应的共轭先验是Beta分布，即：
\begin{equation}\label{beta}
p(\mu| \alpha, \beta) = \textrm{Beta}(\mu | \alpha, \beta) = \frac{\Gamma(\alpha + \beta)}{\Gamma(\alpha) \Gamma(\beta)} \mu^{\alpha - 1} (1- \mu)^{\beta - 1}
\end{equation}
超参数$\alpha$和$\beta$其实就对应于公式\ref{smooth}中的$\alpha$和$\gamma - \alpha$。我们可以采用经验贝叶斯的方法来估计$\alpha$和$\beta$。将公式\ref{ctr}, \ref{beta}代入***给出的一般指数族分布经验贝叶斯解，可以得到解$\alpha$和$\beta$的具体EM算法：

1. E-step:
\begin{equation}
\tilde \alpha_k^{\textrm{old}} = \alpha^{\textrm{old}} + \sum_{i=1}^{N_k}h_{k,i}, \quad \tilde \beta_k^{\textrm{old}} = \beta^{\textrm{old}} + (N_k - \sum_{i=1}^{N_k}h_{k,i})
\end{equation}

2. M-step:
\begin{eqnarray}
\psi(\alpha_k^{\textrm{new}}) - \psi(\alpha_k^{\textrm{new}} + \beta_k^{\textrm{new}}) = \frac{1}{K} \sum_{k=1}^K \psi(\tilde \alpha_k^{\textrm{old}}) - \psi(\tilde \alpha_k^{\textrm{old}} + \tilde \beta_k^{\textrm{old}}) \\
\psi(\beta_k^{\textrm{new}}) - \psi(\alpha_k^{\textrm{new}} + \beta_k^{\textrm{new}}) = \frac{1}{K} \sum_{k=1}^K \psi(\tilde \beta_k^{\textrm{old}}) - \psi(\tilde \alpha_k^{\textrm{old}} + \tilde \beta_k^{\textrm{old}})
\end{eqnarray}
其中M-step需要解关于$\alpha_k^{\textrm{new}}$和$\beta_k^{\textrm{new}}$的方程组，因而并不是闭式解，不过这一方程组并不难用数值方法求解。

\subsection{点击率模型的校正}

\subsection{点击率模型的评测}

点击率模型预测的事点击事件出现的概率，因此可以采用Precision-Recall(PR)曲线或Receive Operating Characteristic(ROC)曲线来评测。

\section{探索与利用}

上面关于点击率预测的讨论中，我们知道需要采取或者模型、或者特征上的手段来更多地捕获动态信息。这也就意味着，对某种类型的$(a, u, c)$组合，如果没有相关历史数据的支持，很难对其合理地估计点击率。由于线上我们总是使用认为最优的策略来投放广告，那些非最优的组合出线机会很少，因而对这部分的估计也就不准确。实际上，无法对特征空间采样构造训练集，是互联网问题区别于其他机器学习问题的重要特点。举例来说，在搜索广告市场中，往往有相当比例的广告商从来得不到展示机会因而退出市场。虽然每一次决策我们都在尽力优化eCPM，很显然这不是系统的最佳宏观状态。

解决这个问题的方法，属于强化学习(Reinforcement Learning)的范畴。直觉的想法，是牺牲一部分流量上最优eCPM的诉求，采用相对随机的策略来采样效果未知的特征空间，这称为探索过程(Exploration)；同时根据探索和正常决策的总体流量更有效地预测用户的反馈行为，这称为利用过程(Exploitation)。这样的整体策略，一般称为探索与利用(Explore and Exploit, E\&E)。E\&E可以形象地类比成玩老虎机是的决策问题：玩家面对老虎机上$A$个有不同期望收益的手柄，需要用尽可能少的筹码探索出收益最高的那个手柄，然后利用这个结果去获取回报。这种简单的$A$中选1的研究问题，也称为Multi-Arm Bandit(MAB)问题。我们先来看看MAB问题的数学描述。

假设有$A$个手柄$a\in\{1, 2, \cdots, A\}$(这里的手柄可以认为是广告)，在每个决策时刻$t$(对应于广告展示)，我们必须从$A$个手柄中选择一个，而目标是优化许多次决策后的整体收益。每个广告$a$在第$t$次展示的收益计为$r_t(a)$，对于不同的$t$，这些收益是独立同分布的。在$t$时刻，我们用下面的两个量来分别表示该分布的均值$\langle r(a)\rangle$与方差的经验估计(此处先不考虑$u, c$的影响)：
\begin{eqnarray}\label{rew_exp}
\overline{r_t(a)} &\triangleq& \frac{1}{t}\sum_{i=1}^t r_i(a)\nonumber \\
V_t(a) &\triangleq& \frac{1}{t}\sum_{i=1}^t [r_i(a) - \overline{r_t(a)}]^2
\end{eqnarray}
最优的手柄或广告，定义为期望收益最高的那个：
\begin{eqnarray}\label{rew_opt}
a^*= \arg\max_a \langle r(a)\rangle
\end{eqnarray}

MAB问题有一个简单的基础方法，即总是用比例为$\epsilon$的一小部分流量来做探索，在探索流量上随机选择$A$个广告中的一个；在剩余的$1-\epsilon$比例的流量上，总是选择经验收益最高的那个广告。这样的基础方法称为$\epsilon$-贪婪法。很显然，只要经过足够多次的尝试，$\epsilon$-贪婪法是一定可以找到最优的那个手柄的。既然如此，还有什么深入研究的必要呢？我们当然是希望能够以更小的代价找到最优手柄。这里的代价，定义为整个过程的回报与一开始就总是选择最优手柄这一策略的回报差值，即我们探索所付出的代价。对于一次选择广告$a$的展示，代价数学上的表达为：
\begin{eqnarray}\label{regret}
\Delta_a \triangleq \langle r(a^*)\rangle - \langle r(a)\rangle
\end{eqnarray}
E\&E过程的目标是使得整体的代价(Regret)最低。以$T_t(a)$表示到$t$时刻为止分配给$a$的展示数，则这一代价可以写成：
\begin{eqnarray}\label{regret}
R_t = \sum_{a=1}^A T_t(a) \Delta_a
\end{eqnarray}
假设总共需要进行$T$次展示决策，探索一些系统性的方法，使得我们在对最优广告$a^*$没有先验了解的情形下，以比较低的代价完成这一过程，是这个问题研究的关键。这一问题的思路，需要借鉴到类似于贝叶斯学习的思想，即将估计的不确定性引入解决方案中，我们来看一下一些常见的方法。

\subsection{UCB方法}

谈到MAB问题经典的思路，不能不介绍Upper Confidence Bound(UCB)这一族的方法。从物理意义上看，此方法的关键，是在每次投放时，不是简单地选择经验上最优的广告，而且考虑到经验估计的不确定性，进而选择估计值有可能达到的上界最大的那个广告。

\subsection{Contextual Bandit}

虽然花了这么大的力气来介绍MAB问题和UCB方法，跟实际的广告问题一对应，我们会发现这离实用还相去甚远。实际广告系统中的主要挑战有两点：首先，我们需要探索的空间是$(a, u, c)$这一组合空间，而不是简单一组广告，这使得探索的复杂程度大大上升；其次，对$(a, u, c)$的某一具体组合，并不像前文假设的那样有一个确定的期望收益，这是由广告问题的高度动态性决定的，对此我们在点击率预测那一部分已经做了深入探讨。

\section{智能频次控制}

\section{媒体采买平台}

竞价广告市场的产生，对需求方的技术也提出了新的要求：原来通过直接与媒体签订保量合约的采买方式，需要让位于通过参与竞价帮助广告主完成量与质需求的采买产品。具体地说，这样的产品需要具备一项基本功能：即按照广告主预算跨媒体和广告网络一站式采买某种人群的广告投放机会。另外，还可以具备一项高级功能，即机器驱动的自动ROI优化功能。这样的产品形态，我们称为媒体采买平台(Media Buying Platform, MBP)，与之类似的概念，还有所谓交易终端(Trading Desk)，可以认为是同一类的产品。

从市场发展来看，许多媒体采买平台都是4A或其他代理公司为了适应市场技术形态的变化，收购或者孵化出来的子公司，这从图*中这两部分产品之间的连接线就可以看出来。值得注意，在竞价广告市场上，广告主量的需求仍然是存在的，因此保量的合约并不是消失了，而是由代理与媒体之间下沉到了广告主与媒体采买平台之间。

媒体采买平台的技术挑战主要在于ROI的优化部分，要合理地选择需要的受众定向条件，并在每个人群上优化出价，以保证量的要求和优化收益，是一个复杂的组合优化问题。由于无法具体控制每一次展示，其困难程度要高于后文实时竞价的情况下的DSP优化。这方面的市场需求，以搜索广告网络中的优化问题最为突出，因此我们将在下一章中具体介绍相关技术。

\clearpage{\pagestyle{empty}} %\cleardoublepage
%\clearpage{\pagestyle{empty}\cleardoublepage}

\end{CJK*}
